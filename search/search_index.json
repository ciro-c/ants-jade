{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ants-jade","text":"<p>Algoritmos de Col\u00f4nia de formigas (Ant colony optimization algorithms) com o framework JADE</p> <p>Esse projeto busca implementar um de busca de melhor caminho utilizando algoritmos de col\u00f4nia de formigas </p> <p>Procurando por um reposit\u00f3rio modelo base com apenas o MAVEN + JADE? olhe na branch \u00b4base-model\u00b4</p> <p>Para mais informa\u00e7\u00f5es consulte: Documenta\u00e7\u00e3o do projeto</p>"},{"location":"#requisitos","title":"Requisitos","text":"<p>Para aplica\u00e7\u00e3o \u00e9 necess\u00e1rio <code>JAVA &gt;= 11</code></p> <p>Opcional Para documentos \u00e9 necess\u00e1rio <code>docker compose</code> ou nodejs</p>"},{"location":"#rodando-a-aplicacao","title":"Rodando a aplica\u00e7\u00e3o","text":"<p>Todos commandos aplica\u00e7\u00e3o se encontram no arquivo <code>makefile</code>;</p> <p><code>bash   make build-and-run</code> </p>"},{"location":"#rodando-a-documentacao","title":"Rodando a documenta\u00e7\u00e3o","text":"<p><code>bash   docker-compose up</code> </p>"},{"location":"dependencies/","title":"Depend\u00eancias","text":"<p>A instala\u00e7\u00e3o de depend\u00eancias, de prefer\u00eancia, deve ser feita pelo Maven nos reposit\u00f3rios dela (da menos trabalho :) ), que \u00e9 bem esplicado aqui Maven in 5 minutes. </p>"},{"location":"dependencies/#instalando-jar","title":"Instalando <code>.jar</code>","text":"<p>Caso a depend\u00eancia que voc\u00ea deseja utilizar seja um <code>.jar</code> ou voc\u00ea deseja alterar uma depend\u00eancia <code>.jar</code> existente como <code>jade.jar</code>,<code>commons-codec-1.3.jar</code> ou <code>jadeExamples.jar</code>, vai ter que:</p>"},{"location":"dependencies/#1-adicionar-o-arquivo-jar-ao-projeto","title":"1 - Adicionar o arquivo <code>.jar</code> ao projeto","text":"<p>Recomendamos colocar o arquivo dentro de <code>src/libs</code> para manter o padr\u00e3o. Caso coloque em outro lugar na hora de colocar no makefile o <code>$(PATH_LIBS)</code> dever\u00e1 ser substitu\u00eddo pelo caminho do arquivo</p>"},{"location":"dependencies/#2-adicionar-a-dependencia-ao-makefile","title":"2 - Adicionar a depend\u00eancia ao makefile","text":"<p>No arquivo makefile adicionar o seguinte te c\u00f3digo no final do arquivo e substituir o que est\u00e1 entre colchetes <code>[]</code> pelas informa\u00e7\u00f5es da sua depend\u00eancia</p> <pre><code>install-[lib]:\n    @echo \"Instalando [lib]\"\n    ./mvnw clean install:install-file -Dfile=$(PATH_LIBS)/[lib].jar \\\n   -DgroupId=[lib-group-id] \\\n   -DartifactId=[lib-artifact-id] \\\n   -Dversion=[lib-version] \\\n   -Dpackaging=jar\n\n</code></pre> <p>depois adicionar no comando build-libs o seu comando criado</p> <pre><code>build-libs:\n    @echo \"Instalando JAR libs externas\"\n    make install-jade install-commons install-examples-jade install-[lib]\n</code></pre> <p>e por fim para adicionar no seu classPath basta adicionar no final do <code>LIBS_JAR</code></p> <pre><code>LIBS_JAR    = $(PATH_LIBS)/jade.jar:$(PATH_LIBS)/jadeExamples.jar:$(PATH_LIBS)/commons-codec-1.3.jar:$(PATH_LIBS)/[lib].jar\n</code></pre>"},{"location":"dependencies/#3-adicionar-a-dependencia-ao-pomxml","title":"3 - Adicionar a depend\u00eancia ao <code>pom.xml</code>","text":"<p>No arquivo <code>pom.xml</code> adicionar a sua nova depend\u00eancia dentro da tag de <code>dependencies</code></p> <pre><code>&lt;dependencies&gt;\n  ... outras depend\u00eancias\n  &lt;dependency&gt;\n    &lt;groupId&gt;[lib-group-id]&lt;/groupId&gt;\n    &lt;artifactId&gt;[lib-artifact-id]&lt;/artifactId&gt;\n    &lt;version&gt;[lib-version]&lt;/version&gt;\n  &lt;/dependency&gt;\n  ...\n&lt;/dependencies&gt;\n\n</code></pre> <p>Agora basta rodar <code>make build</code> que ele vai instalar tudo de maneira autom\u00e1tica.</p>"},{"location":"how_works/","title":"Como o projeto funciona","text":"<p>O projeto tem como base o MAVEN que organiza e gerencia o processo de build automaticamente, o <code>Makefile</code> para facilitar os comandos do terminal e o framework JADE para criar e gerenciar os Agentes.</p>"},{"location":"how_works/#maven","title":"MAVEN","text":"<p>OBS: \u00e9 recomendado utilizar o comando <code>./mvnw</code> inv\u00e9s do <code>mvn</code> para melhor consist\u00eancia.</p> <p>Faz o build do projeto com base na organiza\u00e7\u00e3o de pastas, ent\u00e3o cada pasta dentro do <code>src/main/java</code> \u00e9 compilado para um pacote espec\u00edfico.</p> <p>Exemplo:</p> <p>Se tivermos uma classe chamada <code>HelloWorld</code> que fica dentro do <code>src/main/java/com/mvnJade/app/HelloWorld.java</code> ent\u00e3o o pacote dele \u00e9 <code>com.mvnJade.app</code></p> <p>Sobre depend\u00eancias, o Maven cuida delas para voc\u00ea, basta colocar ela dentro do <code>pom.xml</code>. Se for uma depend\u00eancia que n\u00e3o est\u00e1 dispon\u00edvel nos reposit\u00f3rios da Maven d\u00ea uma olhada na documenta\u00e7\u00e3o Mudando depend\u00eancias.</p>"},{"location":"how_works/#makefile","title":"MAKEFILE","text":"<p>Apenas um arquivo que facilita rodar o projeto usando comandos mais curtos. Quando voc\u00ea chama:</p> <pre><code>make run\n</code></pre> <p>Ele roda:</p> <pre><code>java -cp src/libs/jade.jar:src/libs/jadeExamples.jar:src/libs/commons-codec-1.3.jar:target/maven-jade-1.0-SNAPSHOT.jar jade.Boot -gui -agents \"mainAgent:com.mvnJade.app.HelloWorld\"\n</code></pre> <p>O comando make tamb\u00e9m permite passar vari\u00e1veis diretamente inv\u00e9s de usar o que est\u00e1 no arquivo. Se rodar:</p> <pre><code>make run JADE_AGENTS=\"teste:com.mvnJade.app.OutroAgente\"\n</code></pre> <p>Ele roda:</p> <pre><code>java -cp src/libs/jade.jar:src/libs/jadeExamples.jar:src/libs/commons-codec-1.3.jar:target/maven-jade-1.0-SNAPSHOT.jar jade.Boot -gui -agents \"teste:com.mvnJade.app.OutroAgente\"\n</code></pre>"},{"location":"how_works/#jade","title":"Jade","text":"<p>O Jade \u00e9 o n\u00facleo do projeto. Ele est\u00e1 instalado como uma depend\u00eancia <code>.jar</code> na vers\u00e3o 4.6.0.</p> <p>Tamb\u00e9m est\u00e1 instalado os exemplos do jade. Para executar um exemplo basta executar um comando trocando o <code>host:examples.party.HostAgent</code> por outro exemplo.</p> <pre><code>make run JADE_FLAGS=\"-gui host:examples.party.HostAgent\"\n</code></pre> <p>Para mais informa\u00e7\u00f5es de como lan\u00e7ar mais agentes consulte: Lan\u00e7ando agentes jade.</p> <p>para mudar a vers\u00e3o do jade ou das outras libs de uma olhada em: Mudando depend\u00eancias.</p>"},{"location":"launch_agents/","title":"Lan\u00e7ando agentes Jade","text":""},{"location":"launch_agents/#manualmente","title":"Manualmente","text":"<p>Para lan\u00e7ar agentes de maneira manual basta usar o comando <code>make run</code> com a flag <code>JADE_AGENTS</code> passando os agentes.</p> <pre><code>  make run JADE_AGENTS=\"agentOne:com.mvnJade.app.AgentOne;agentTwo:com.mvnJade.app.AgentTwo;\"\n</code></pre> <p>Caso precise controlar as flags de maneira mais precisamente pode usar a flag <code>JADE_FLAGS</code></p> <pre><code>  make run JADE_FLAGS=\"-gui\"\n</code></pre>"},{"location":"launch_agents/#automaticamente","title":"Automaticamente","text":"<p>Para chamar agentes de maneira automatizada basta, no arquivo <code>Makefile</code>, adicionar o seu agente no final de linha contendo o <code>JADE_AGENTS</code></p> <pre><code>JADE_AGENTS      = mainAgent:$(PROJECT_GROUP).HelloWorld;second:$(PROJECT_GROUP).SecondAgent;anotherAgent:$(PROJECT_GROUP).AnotherOne; \n\n</code></pre>"}]}